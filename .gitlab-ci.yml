image: docker:20.10.16

services:
  - docker:20.10.16-dind

stages:
  - test
  - build

test:
  stage: test
  only:
    - staging
  before_script:
    - apk add --no-cache python3 py3-pip postgresql-client
    - pip install docker-compose
  script:
    # Aguardar postgres e executar testes
    - docker-compose -f docker-compose.ci.yml up -d
    - sleep 10 # Aguarda postgres iniciar

    # Executar testes
    - docker-compose -f docker-compose.ci.yml exec -T api pytest --cov=./ --cov-report=xml

    # Verificar migrações
    - docker-compose -f docker-compose.ci.yml exec -T api python manage.py makemigrations --check --dry-run
    - docker-compose -f docker-compose.ci.yml exec -T api python manage.py migrate --check --dry-run

    # Pre-commit
    - docker-compose -f docker-compose.ci.yml exec -T api pip install pre-commit
    - docker-compose -f docker-compose.ci.yml exec -T api pre-commit run --all-files
  after_script:
    - docker-compose -f docker-compose.ci.yml down -v

build:
  stage: build
  only:
    - staging
    - main
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
